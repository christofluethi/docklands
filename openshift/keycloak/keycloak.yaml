apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: An example Keycloak server with HTTPS
    iconClass: icon-sso
    openshift.io/display-name: Keycloak
    openshift.io/provider-display-name: shaped.ch
    openshift.io/support-url: https://www.shaped.ch
    tags: keycloak
  creationTimestamp: null
  name: keycloak-https
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's https port.
    labels:
      application: ${APPLICATION_NAME}
    name: secure-${APPLICATION_NAME}
  spec:
    ports:
    - port: 8443
      targetPort: 8443
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-http
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME_HTTP}
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-https
  kind: Route
  metadata:
    annotations:
      description: Route for application's https service.
    labels:
      application: ${APPLICATION_NAME}
    name: secure-${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME_HTTPS}
    tls:
      termination: passthrough
    to:
      name: secure-${APPLICATION_NAME}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: KEYCLOAK_USER
            value: ${KEYCLOAK_USER}
          - name: KEYCLOAK_PASSWORD
            value: ${KEYCLOAK_PASSWORD}
          - name: JGROUPS_DISCOVERY_PROTOCOL
            value: dns.DNS_PING
          - name: JGROUPS_DISCOVERY_PROPERTIES
            value: dns_query=${APPLICATION_NAME}.${NAMESPACE}.svc.cluster.local
          - name: DB_VENDOR
            value: ${DB_VENDOR}
          - name: DB_ADDR
            value: ${DB_ADDR}
          - name: DB_PORT
            value: ${DB_PORT}
          - name: DB_DATABASE
            value: ${DB_DATABASE}
          - name: DB_USER
            value: ${DB_USER}
          - name: DB_PASSWORD
            value: ${DB_PASSWORD}
          image: ${KEYCLOAK_IMAGE}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /auth/realms/master
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /auth/realms/master
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
          securityContext:
            privileged: false
    triggers:
    - type: ConfigChange
parameters:
- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: keycloak
- description: This namespace is a part of DNS query sent to Kubernetes API. This query allows the DNS_PING protocol to extract cluster members. 
  displayName: Namespace used for DNS discovery
  name: NAMESPACE
  required: true
- description: Container image of keycloak to be used
  displayName: Keycloak container image
  name: KEYCLOAK_IMAGE
  required: true
  value: jboss/keycloak-openshift
- description: Keycloak Server administrator username
  displayName: Keycloak Administrator Username
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: KEYCLOAK_USER
  required: true
- description: Keycloak Server administrator password
  displayName: Keycloak Administrator Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: KEYCLOAK_PASSWORD
  required: true
- description: DB vendor (H2, POSTGRES, MYSQL or MARIADB)
  displayName: DB Vendor
  name: DB_VENDOR
  required: true
  value: POSTGRES
- description: Specify hostname of the database
  displayName: DB hostname
  name: DB_ADDR
  required: true
  value: db
- description: Specify port of the database
  displayName: DB port
  name: DB_PORT
  required: true
  value: "5432"
- description: Specify name of the database to use 
  displayName: DB name
  name: DB_DATABASE
  required: true
  value: postgres
- description: Specify user to use to authenticate to the database
  displayName: DB user
  name: DB_USER
  required: true
  value: keycloak
- description: Specify user's password to use to authenticate to the database
  displayName: DB password
  name: DB_PASSWORD
  required: true
- description: 'Custom hostname for http service route. Leave blank for default hostname,
    e.g.: <application-name>.<project>.<default-domain-suffix>'
  displayName: Custom http Route Hostname
  name: HOSTNAME_HTTP
- description: 'Custom hostname for https service route. Leave blank for default hostname,
    e.g.: <application-name>.<project>.<default-domain-suffix>'
  displayName: Custom https Route Hostname
  name: HOSTNAME_HTTPS
